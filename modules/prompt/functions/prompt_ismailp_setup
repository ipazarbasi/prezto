#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Ismail Pazarbasi <ismail.pazarbasi@gmail.com>
#
# Customized formyself; Ismail Pazarbasi
# Load dependencies.
pmodload 'helper'

function prompt_ismailp_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_ismailp_pwd="$MATCH"
    unset MATCH
  else
    _prompt_ismailp_pwd="%n@%m %~ %# "
  fi
}

function prompt_ismailp_async_callback {
  case $1 in
    prompt_ismailp_async_git)
      # We can safely split on ':' because it isn't allowed in ref names.
      IFS=':' read _git_target _git_post_target <<<"$3"

      # The target actually contains 3 space separated possibilities, so we need to
      # make sure we grab the first one.
      _git_target=$(coalesce ${(@)${(z)_git_target}})

      if [[ -z "$_git_target" ]]; then
        # No git target detected, flush the git fragment and redisplay the prompt.
        if [[ -n "$_prompt_ismailp_git" ]]; then
          _prompt_ismailp_git=''
          zle && zle reset-prompt
        fi
      else
        # Git target detected, update the git fragment and redisplay the prompt.
        _prompt_ismailp_git="${_git_target}${_git_post_target}"
        zle && zle reset-prompt
      fi
      ;;
  esac
}

function prompt_ismailp_async_git {
  cd -q "$1"
  if (( $+functions[git-info] )); then
    git-info
    print ${git_info[status]}
  fi
}

function prompt_ismailp_async_tasks {
  # Initialize async worker. This needs to be done here and not in
  # prompt_ismailp_setup so the git formatting can be overridden by other prompts.
  if (( !${prompt_prezto_async_init:-0} )); then
    async_start_worker prompt_ismailp -n
    async_register_callback prompt_ismailp prompt_ismailp_async_callback
    typeset -g prompt_prezto_async_init=1
  fi

  # Kill the old process of slow commands if it is still running.
  async_flush_jobs prompt_ismailp

  # Compute slow commands in the background.
  async_job prompt_ismailp prompt_ismailp_async_git "$PWD"
}

function prompt_ismailp_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  # prompt_ismailp_pwd=$(prompt-pwd)

  # Handle updating git data. We also clear the git prompt data if we're in a
  # different git root now.
  if (( $+functions[git-dir] )); then
    local new_git_root="$(git-dir 2> /dev/null)"
    if [[ $new_git_root != $_ismailp_cur_git_root ]]; then
      _prompt_ismailp_git=''
      _ismailp_cur_git_root=$new_git_root
    fi
  fi

  # Run python info (this should be fast and not require any async)
  if (( $+functions[python-info] )); then
    python-info
  fi

  prompt_ismailp_async_tasks
}

function prompt_ismailp_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz async && async

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_ismailp_precmd

  # Tell prezto we can manage this prompt
  zstyle ':prezto:module:prompt' managed 'yes'

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ''
  # zstyle ':prezto:module:editor:info:keymap:primary' format ''
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %K{cyan}%F{black}N%f%k'
  zstyle ':prezto:module:syntax-highlighting' styles \
    'builtin' 'bg=white' \
    'command' 'bg=white'
  # Set git-info parameters.
  # zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%%B%F{yellow}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{green}✚%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{yellow}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{yellow}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format ' %F{green}%b%f'
  zstyle ':prezto:module:git:info:commit' format ' %F{green}%.7c%f'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{red}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{blue}✱%f%%b'
  zstyle ':prezto:module:git:info:position' format ' %F{red}%p%f'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{magenta}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{cyan}✭%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{yellow}═%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{white}◼%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '%b %p %c %s:%A%B%S%a%d%m%r%U%u'
     # 'prompt' ' %F{white}git%f$(coalesce "%b" "%p" "%c")%s' \
     # 'rprompt' '%A%B%S%a%d%m%r%U%u'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format '%f%F{3}(%v)%F{7} '

  # Get the async worker set up.
  _ismailp_cur_git_root=''

  _prompt_ismailp_git=''
  _prompt_ismailp_pwd=''


  # Define prompts.
  PROMPT='%b%f%F{72}%n%F{242}@%F{179}%m %F{209}%~%f%b %#${editor_info[keymap]} '
  RPROMPT='%(1j;%{%F{cyan}%}%j⚙%f ;)${editor_info[overwrite]}%(?:: %F{red}⏎%?%f )${VIM:+" %B%F{green}V%f%b"}${_prompt_ismailp_git}'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

function prompt_ismailp_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'ismailp'
}

prompt_ismailp_setup "$@"

